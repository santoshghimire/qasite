# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-10-13 02:10
from __future__ import unicode_literals

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import qa.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the article title.', max_length=200, verbose_name='title')),
                ('content', models.FileField(help_text='Maximum file size allowed is 5Mb', null=True, upload_to='article', validators=[qa.validators.validate_file])),
                ('audio', models.FileField(help_text='Maximum file size allowed is 5Mb', null=True, upload_to='article', validators=[qa.validators.validate_audio])),
                ('grade', models.CharField(help_text='Enter the grade.', max_length=200, verbose_name='grade')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title', unique=True)),
            ],
            options={
                'ordering': ('title',),
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the article category', max_length=100, verbose_name='title')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title', unique=True)),
            ],
            options={
                'ordering': ('title',),
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter option name e.g. a', max_length=1)),
                ('text', models.TextField(null=True)),
                ('image', models.ImageField(help_text='Maximum file size allowed is 2Mb', null=True, upload_to='answerImages', validators=[qa.validators.validate_image])),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('text', models.TextField()),
                ('image', models.ImageField(help_text='Maximum file size allowed is 2Mb', null=True, upload_to='questionImages', validators=[qa.validators.validate_image])),
                ('audio', models.FileField(help_text='Maximum file size allowed is 5Mb', null=True, upload_to='questionAudio', validators=[qa.validators.validate_audio])),
                ('video', models.FileField(help_text='Maximum file size allowed is 10Mb', null=True, upload_to='questionVideo', validators=[qa.validators.validate_video])),
                ('question_type', models.CharField(choices=[('objective', 'Objective'), ('subjective', 'Categoryive')], default='objective', max_length=20)),
                ('correct', models.CharField(max_length=1, null=True)),
                ('marks', models.FloatField(blank=True, null=True)),
                ('difficulty', models.IntegerField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qa.Article')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='qa.Category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='createdby', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updatedby', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='verifiedby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('article',),
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='QuestionAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('given_answer', models.CharField(max_length=8000)),
                ('is_correct', models.BooleanField()),
                ('attempted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'QuestionAttempt',
                'verbose_name_plural': 'QuestionAttempts',
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qa.Article')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='qa.Category')),
                ('questions', models.ManyToManyField(to='qa.Question')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizs',
            },
        ),
        migrations.AddField(
            model_name='questionattempt',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qa.Quiz'),
        ),
        migrations.AddField(
            model_name='questionattempt',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qa.Question'),
        ),
        migrations.AddField(
            model_name='option',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qa.Question'),
        ),
        migrations.AddField(
            model_name='article',
            name='article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic', to='qa.Category'),
        ),
    ]
